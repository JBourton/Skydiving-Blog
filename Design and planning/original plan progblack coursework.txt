Rough overview of website
- A website about skydiving
- This website can detail some of the coolest dropzones in the world and up and coming events at those DZs
- There is a possiblity that I could sync data from a live, running event calendar for real life events
- Could possibly have profiles w/ username & password but I'd rather not
- To extend that, could have access privilleges based on level of skydiver, but again, maybe not
- For each event / dropzone, users should be able to comment on the picture, either under a chosen username or on their account
- Can have more than one page, so should have a 'pro-skydivers' page where experienced skydivers can change certain things about the webpage, such as event dates/locations
- Could have a sign-up lists for events where users can add their names to the list (check for duplicates); can use createElement (example found here: https://durham.cloud.panopto.eu/Panopto/Pages/Viewer.aspx?id=47570d16-f571-4c0c-8544-af43009558c9)

- Could have a drop-down menu where you select a country/Dropzone and information about the DZ is displayed
- Alongside this, minimum jump requirements etc can be there
- Then, additional fun/extreme activities to do in the area could be present
- Comment section below each picture - can connect with web server
- So one big div container to hold the above

- Could add your name to list of atendees, and essentially have a chat room where you can make plans about sharing accomodation, discuss parachute types etc
- So if username field is filled, enter button could send data to server, and server would add data to table and respond back

- Include location in google maps if possible for each of these dropzones
- Could have a user-generated rating for each dropzone - each user is permitted to give 1 thumbs up/down per dropzone

Technical details
- Will make use of bootstrap as a front-end framework
- Will need to ensure that ratios are used instead of pixels for images, for responsiveness on different devices (note: using bootstrap will help ensure this)

Can also have an 'add events' section for each DZ.

What if the comment section is underneath the DZ div? Then the 2 entities can be loaded more suitably for the task.

I would like the width of the DZ div and comment section to take up 10/12 of the screen.
There will be a gap in between that div and comments.

This gist contains an example of how to make the webapge more responsible (at the bottom of the CSS): https://gist.github.com/bmcculley/361a970dbe18a0b440d2df256e33efaa
The version of the code as of 19/01/23 uses the example code found here: https://www.codeply.com/go/bp/YhWhOlLPR0 for organising bootstrap grid

When passing a string into the Dropzone object constructor, I could, instead of just a normal string, pass in raw html such that it is rendered on the client side.
This would avoid messy strings and weird splicing techniques trying to send the data across, and instead package it up nicely.

A 'suggest an edit' section for each dropzone could come in handy with sending/requesting data from server.

Unsure as to whether javascript dropzone objects should be stored as JSON, or should be created as JS and sent as JSON.
We could have seperate json files for each dropzone, and fetch the entire JSON file when needed.
This would work based of the example found here: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON and is as follows:
async function name():
	const requestURL depending on button click;
	const request = new Request(requestURL);
	
	const response = await fetch(request);
	const dropzones = await response.json();

_________________________________________________________________________________________________________________________________________________________________________
29/01/23
Could add date of submitted comment to comment entity type
Should include the relationship between comment json file and dropzone json file --> This can be the dropzone being a parent of the comment

May need to refer to this later: https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/   ---> Should use the information here to sanitise form inputs, e.g. character limit, rude words etc
This one's pretty good for the basic understanding: https://www.youtube.com/watch?v=vegqqDjulKg

For AJAX json loading: https://femkreations.com/how-to-load-json-using-ajax-in-9-easy-steps-with-fun-project/

Should probably have a nice alert button for comment not submitted, with a resuable function to call.